FROM ubuntu:22.04 AS toolchain-tmp

RUN apt update && apt upgrade -y && apt install -y bison build-essential gawk python3 texinfo wget

# Prepare build directory
WORKDIR /gcc_build
ARG BINUTILS
RUN wget https://ftpmirror.gnu.org/binutils/$BINUTILS.tar.bz2 && tar xf $BINUTILS.tar.bz2 && rm $BINUTILS.tar.bz2
ARG GCC
RUN wget https://ftpmirror.gnu.org/gcc/$GCC/$GCC.tar.gz && tar xf $GCC.tar.gz && rm $GCC.tar.gz
RUN cd $GCC; ./contrib/download_prerequisites; cd ..
ARG GLIBC
RUN wget https://ftpmirror.gnu.org/glibc/$GLIBC.tar.bz2 && tar xf $GLIBC.tar.bz2 && rm $GLIBC.tar.bz2

# Add sysroot
ARG SYSROOT
COPY --from=sysroot $SYSROOT $SYSROOT

# Prepare cross directory
ARG CROSS
RUN mkdir $CROSS
ENV PATH=$CROSS/bin:$PATH

ARG GLIBC_TARGET
ARG COMPILE_OPTIONS
ARG MACHTYPE
ARG TARGET=$GLIBC_TARGET
ARG BINUTILS_CONFIGURATION="--prefix=$CROSS --target=$TARGET --enable-gold $COMPILE_OPTIONS"
ARG GCC_CONFIGURATION="--prefix=$CROSS --target=$TARGET \
	--enable-languages=c,c++ \
	--disable-bootstrap \
	--disable-multilib \
	--disable-libsanitizer \
	$COMPILE_OPTIONS"
ARG GLIBC_CONFIGURATION="--prefix=$CROSS/$TARGET --target=$TARGET --host=$TARGET --build=$MACHTYPE libc_cv_forced_unwind=yes --with-sysroot=$SYSROOT"

ARG NPROC

# Build binutils
RUN mkdir build-binutils; \
	cd build-binutils && \
	../$BINUTILS/configure $BINUTILS_CONFIGURATION && \
	make -j $NPROC && \
	make install && \
	cd ..

# Build partial gcc
RUN mkdir build-gcc; \
	cd build-gcc && \
	../$GCC/configure $GCC_CONFIGURATION && \
	make -j $NPROC all-gcc && \
	make install-gcc && \
	cd ..

# Build partial glibc
RUN mkdir build-glibc; \
	cd build-glibc && \
	../$GLIBC/configure $GLIBC_CONFIGURATION && \
	make install-bootstrap-headers=yes install-headers && \
	make -j $NPROC csu/subdir_lib && \
	install csu/crt1.o csu/crti.o csu/crtn.o $CROSS/$TARGET/lib && \
	$TARGET-gcc -nostdlib -nostartfiles -shared -x c /dev/null -o $CROSS/$TARGET/lib/libc.so && \
	touch $CROSS/$TARGET/include/gnu/stubs.h && \
	cd ..

# Build GCC--part 2
RUN cd build-gcc && \
	make -j $NPROC all-target-libgcc && \
	make install-target-libgcc && \
	cd ..

# Build glibc
RUN cd build-glibc && \
	make -j $NPROC && \
	make install && \
	cd ..

# Build GCC
RUN cd build-gcc && \
	make -j $NPROC && \
	make install && \
	cd ..
