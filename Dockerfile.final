# Note: this is the last build stage, and provides the final output toolchain
# To build this, run ./xcompile <target>
FROM ubuntu:22.04

ARG CROSS
ARG NPROC
ARG SYSROOT

# Add nice-to-haves
WORKDIR /extra

RUN apt-get update && apt-get install -y build-essential libssl-dev ninja-build wget python3 python3-pip python3-venv

## cmake
ARG CMAKE_VERSION=3.31.3
ARG CMAKE=cmake-$CMAKE_VERSION

### Make and install
RUN wget "https://github.com/Kitware/CMake/releases/download/v$CMAKE_VERSION/$CMAKE.tar.gz" && \
        tar xf "$CMAKE.tar.gz" && \
        cd "$CMAKE" && \
        CC=`which gcc` CXX=`which g++` ./bootstrap -- -DCMAKE_BUILD_TYPE:STRING=Release && \
        make -j $NPROC && \
        make install && \
        rm -rf $CMAKE $CMAKE.tar.gz
ENV CMAKE_TOOLCHAIN_FILE=/toolchain.cmake
ENV CMAKE_GENERATOR=Ninja

WORKDIR /

# Add toolchain files
COPY --from=toolchain-tmp $CROSS $CROSS
COPY --from=sysroot $SYSROOT $SYSROOT

### Set cmake cross compilation variables
RUN echo ""\
        "set(CMAKE_SYSTEM_NAME Linux)\n"\
        "set(CMAKE_SYSROOT $SYSROOT)\n"\
        "set(CMAKE_C_COMPILER $(echo $CROSS/bin/*-gcc))\n"\
        "set(CMAKE_CXX_COMPILER $(echo $CROSS/bin/*-g++))\n" | sed 's/^ *//' > /toolchain.cmake

